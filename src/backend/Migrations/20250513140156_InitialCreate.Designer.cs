// <auto-generated />
using CodeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250513140156_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("CodeApi.Models.Items", b =>
                {
                    b.Property<int>("id_i")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EnergyValue")
                        .HasColumnType("REAL");

                    b.Property<double>("Fat")
                        .HasColumnType("REAL");

                    b.Property<double>("Fiber")
                        .HasColumnType("REAL");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Mass")
                        .HasColumnType("REAL");

                    b.Property<double>("Protein")
                        .HasColumnType("REAL");

                    b.Property<double>("Salt")
                        .HasColumnType("REAL");

                    b.Property<double>("ofWhichSaturates")
                        .HasColumnType("REAL");

                    b.Property<double>("ofWhichSugars")
                        .HasColumnType("REAL");

                    b.HasKey("id_i");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            id_i = 1,
                            Barcode = "1234562",
                            Carbohydrates = 123.0,
                            Description = "expItem1Description",
                            EnergyValue = 123.0,
                            Fat = 123.0,
                            Fiber = 123.0,
                            ItemName = "expItem1",
                            Mass = 123.0,
                            Protein = 123.0,
                            Salt = 123.0,
                            ofWhichSaturates = 123.0,
                            ofWhichSugars = 123.0
                        },
                        new
                        {
                            id_i = 2,
                            Barcode = "3856343",
                            Carbohydrates = 65.299999999999997,
                            Description = "expItem2Description",
                            EnergyValue = 23.300000000000001,
                            Fat = 23.699999999999999,
                            Fiber = 123.0,
                            ItemName = "expItem2",
                            Mass = 123.0,
                            Protein = 24.0,
                            Salt = 87.0,
                            ofWhichSaturates = 1.5,
                            ofWhichSugars = 11.0
                        },
                        new
                        {
                            id_i = 3,
                            Barcode = "2137420",
                            Carbohydrates = 54.899999999999999,
                            Description = "expItem3Description",
                            EnergyValue = 1.23,
                            Fat = 12.300000000000001,
                            Fiber = 2.0,
                            ItemName = "expItem3",
                            Mass = 7.0,
                            Protein = 3.2000000000000002,
                            Salt = 0.040000000000000001,
                            ofWhichSaturates = 13.300000000000001,
                            ofWhichSugars = 0.40000000000000002
                        });
                });

            modelBuilder.Entity("CodeApi.Models.UserSnacks", b =>
                {
                    b.Property<int>("Id_s")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("REAL");

                    b.Property<double>("EnergyValue")
                        .HasColumnType("REAL");

                    b.Property<double>("Fat")
                        .HasColumnType("REAL");

                    b.Property<double>("Fiber")
                        .HasColumnType("REAL");

                    b.Property<int>("Id_u")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Mass")
                        .HasColumnType("REAL");

                    b.Property<double>("Protein")
                        .HasColumnType("REAL");

                    b.Property<double>("Salt")
                        .HasColumnType("REAL");

                    b.Property<string>("SnackName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ofWhichSaturates")
                        .HasColumnType("REAL");

                    b.Property<double>("ofWhichSugars")
                        .HasColumnType("REAL");

                    b.HasKey("Id_s");

                    b.HasIndex("Id_u");

                    b.ToTable("UserSnacks");

                    b.HasData(
                        new
                        {
                            Id_s = 1,
                            Carbohydrates = 123.0,
                            EnergyValue = 123.0,
                            Fat = 123.0,
                            Fiber = 123.0,
                            Id_u = 2,
                            Ingredients = "[{ItemName = 'expItem1', Barcode = '1234562', Dose = 123}, {ItemName = 'expItem2', Barcode = '3856343', Dose = 123}, {ItemName = 'expItem2', Barcode = '2137420', Dose = 123}]",
                            Mass = 123.0,
                            Protein = 123.0,
                            Salt = 123.0,
                            SnackName = "expSnack1",
                            ofWhichSaturates = 123.0,
                            ofWhichSugars = 123.0
                        },
                        new
                        {
                            Id_s = 2,
                            Carbohydrates = 65.299999999999997,
                            EnergyValue = 23.300000000000001,
                            Fat = 23.699999999999999,
                            Fiber = 123.0,
                            Id_u = 2,
                            Ingredients = "[{ItemName = 'expItem1', Barcode = '1234562', Dose = 123}, {ItemName = 'expItem2', Barcode = '3856343', Dose = 123}, {ItemName = 'expItem2', Barcode = '2137420', Dose = 123}]",
                            Mass = 123.0,
                            Protein = 24.0,
                            Salt = 87.0,
                            SnackName = "expSnack2",
                            ofWhichSaturates = 1.5,
                            ofWhichSugars = 11.0
                        },
                        new
                        {
                            Id_s = 3,
                            Carbohydrates = 54.899999999999999,
                            EnergyValue = 1.23,
                            Fat = 12.300000000000001,
                            Fiber = 2.0,
                            Id_u = 1,
                            Ingredients = "[{ItemName = 'expItem1', Barcode = '1234562', Dose = 123}, {ItemName = 'expItem2', Barcode = '3856343', Dose = 123}, {ItemName = 'expItem2', Barcode = '2137420', Dose = 123}]",
                            Mass = 7.0,
                            Protein = 3.2000000000000002,
                            Salt = 0.040000000000000001,
                            SnackName = "expSNack3",
                            ofWhichSaturates = 13.300000000000001,
                            ofWhichSugars = 0.40000000000000002
                        });
                });

            modelBuilder.Entity("CodeApi.Models.Users", b =>
                {
                    b.Property<int>("id_u")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_u");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id_u = 1,
                            Password = "1234",
                            Username = "expUser1"
                        },
                        new
                        {
                            id_u = 2,
                            Password = "4321",
                            Username = "expUSer2"
                        });
                });

            modelBuilder.Entity("CodeApi.Models.UserSnacks", b =>
                {
                    b.HasOne("CodeApi.Models.Users", "users")
                        .WithMany("userSnacks")
                        .HasForeignKey("Id_u")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("CodeApi.Models.Users", b =>
                {
                    b.Navigation("userSnacks");
                });
#pragma warning restore 612, 618
        }
    }
}
